// <auto-generated />
using System;
using ExpenseTracker.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTracker.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTracker.Domain.Models.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Symbol")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id")
                        .HasName("PK_Currency");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ExpenseDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExpenseOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_Expense");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ExpenseOwnerId");

                    b.ToTable("Expense", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.ExpenseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemCategory")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_ExpenseCategory");

                    b.HasIndex("CategoryOwnerId");

                    b.ToTable("ExpenseCategory", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.UserPreference", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PreferredCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SendDailyExpenseReportMail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendMonthlyExpenseReportMail")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK_UserPreference");

                    b.HasIndex("PreferredCurrencyId");

                    b.ToTable("UserPreference", (string)null);
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Domain.Models.ExpenseCategory", "Category")
                        .WithMany("Expenses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Domain.Models.User", "ExpenseOwner")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ExpenseTracker.Domain.SharedKernel.Money", "ExpenseAmount", b1 =>
                        {
                            b1.Property<Guid>("ExpenseId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Amount");

                            b1.Property<string>("CurrencyCode")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("CurrencyCode");

                            b1.Property<string>("CurrencySymbol")
                                .HasMaxLength(5)
                                .HasColumnType("nvarchar(5)")
                                .HasColumnName("CurrencySymbol");

                            b1.HasKey("ExpenseId");

                            b1.ToTable("Expense");

                            b1.WithOwner()
                                .HasForeignKey("ExpenseId");
                        });

                    b.Navigation("Category");

                    b.Navigation("ExpenseAmount")
                        .IsRequired();

                    b.Navigation("ExpenseOwner");
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.ExpenseCategory", b =>
                {
                    b.HasOne("ExpenseTracker.Domain.Models.User", "CategoryOwner")
                        .WithMany("ExpenseCategories")
                        .HasForeignKey("CategoryOwnerId");

                    b.Navigation("CategoryOwner");
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.User", b =>
                {
                    b.OwnsOne("ExpenseTracker.Domain.SharedKernel.PersonName", "Name", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("LastName");

                            b1.Property<string>("MiddleName")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("MiddleName");

                            b1.HasKey("UserId");

                            b1.ToTable("User");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.UserPreference", b =>
                {
                    b.HasOne("ExpenseTracker.Domain.Models.User", "User")
                        .WithOne("Preference")
                        .HasForeignKey("ExpenseTracker.Domain.Models.UserPreference", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Domain.Models.Currency", "PreferredCurrency")
                        .WithMany()
                        .HasForeignKey("PreferredCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PreferredCurrency");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.ExpenseCategory", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Domain.Models.User", b =>
                {
                    b.Navigation("ExpenseCategories");

                    b.Navigation("Expenses");

                    b.Navigation("Preference");
                });
#pragma warning restore 612, 618
        }
    }
}
